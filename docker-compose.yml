services:
  sensors-api:
    build:
      dockerfile: deployment/api/Dockerfile
      context: .
    environment:
      - DB_DNS=postgres://fish:fish@postgres-host:5432/fish?sslmode=disable
    depends_on:
      - db
    restart: always
    ports:
      - "8080:8080"
  sensors-sensor-channels:
    build:
      dockerfile: deployment/sensor_channels/Dockerfile
      context: .
    environment:
      - RABBITMQ_CONN=amqp://fish:fish@rabbitmq-host:5672/
      - RABBITMQ_QUEUE=sensor_queue
      - CONFIG_PATH=src/sensor_channels/config.yml
    depends_on:
      - rabbitmq
    restart: always
  sensors-sensor-readers:
    build:
      dockerfile: deployment/sensor_readers/Dockerfile
      context: .
    environment:
      - DB_DNS=postgres://fish:fish@postgres-host:5432/fish?sslmode=disable
      - RABBITMQ_CONN=amqp://fish:fish@rabbitmq-host:5672/
      - RABBITMQ_QUEUE=sensor_queue
    depends_on:
      - rabbitmq
      - db
    restart: always
    deploy:
      mode: replicated
      replicas: 2
  db:
    image: postgres
    hostname: postgres-host
    restart: always
    environment:
      - POSTGRES_USER=fish
      - POSTGRES_PASSWORD=fish
      - POSTGRES_DB=fish
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/
  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq-host
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=fish
      - RABBITMQ_DEFAULT_PASS=fish
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
volumes:
  db:
    driver: local
  rabbitmq:
    driver: local